<?xml version="1.0" encoding="utf-16"?>
<PROG NAME="ZDEMO_EXCEL30" VARCL="X" SUBC="1" CNAM="BCUSER" CDAT="20110821" UNAM="BCUSER" UDAT="20110822" VERN="000031" RSTAT="T" RMAND="001" RLOAD="E" FIXPT="X" SDATE="20110822" STIME="204314" IDATE="20110822" ITIME="204314" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="abap2xlsx Demo: ABAP Cell data types" LENGTH="36 "/>
   <textElement ID="S" KEY="P_PATH" ENTRY="D       ." LENGTH="9 "/>
  </language>
 </textPool>
 <programDocumentation/>
 <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZDEMO_EXCEL1
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;
*&amp;---------------------------------------------------------------------*

REPORT  zdemo_excel30.

DATA: lo_excel                TYPE REF TO zcl_excel,
      lo_excel_writer         TYPE REF TO zif_excel_writer,
      lo_worksheet            TYPE REF TO zcl_excel_worksheet,
      lo_hyperlink            TYPE REF TO zcl_excel_hyperlink,
      column_dimension        TYPE REF TO zcl_excel_worksheet_columndime.

DATA: lv_file                 TYPE xstring,
      lv_bytecount            TYPE i,
      lt_file_tab             TYPE solix_tab.

DATA: lv_full_path      TYPE string,
      lv_workdir        TYPE string,
      lv_file_separator TYPE c.

CONSTANTS: lv_default_file_name TYPE string VALUE &apos;30_CellDataTypes.xlsx&apos;,
           lc_typekind_string TYPE abap_typekind VALUE cl_abap_typedescr=&gt;typekind_string,
           lc_typekind_packed TYPE abap_typekind VALUE cl_abap_typedescr=&gt;typekind_packed,
           lc_typekind_num    TYPE abap_typekind VALUE cl_abap_typedescr=&gt;typekind_num,
           lc_typekind_date   TYPE abap_typekind VALUE cl_abap_typedescr=&gt;typekind_date.

PARAMETERS: p_path TYPE zexcel_export_dir.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_path.
  lv_workdir = p_path.
  cl_gui_frontend_services=&gt;directory_browse( EXPORTING initial_folder  = lv_workdir
                                              CHANGING  selected_folder = lv_workdir ).
  p_path = lv_workdir.

INITIALIZATION.
  cl_gui_frontend_services=&gt;get_sapgui_workdir( CHANGING sapworkdir = lv_workdir ).
  cl_gui_cfw=&gt;flush( ).
  p_path = lv_workdir.

START-OF-SELECTION.

  IF p_path IS INITIAL.
    p_path = lv_workdir.
  ENDIF.
  cl_gui_frontend_services=&gt;get_file_separator( CHANGING file_separator = lv_file_separator ).
  CONCATENATE p_path lv_file_separator lv_default_file_name INTO lv_full_path.

  &quot; Creates active sheet
  CREATE OBJECT lo_excel.

  &quot; Get active sheet
  lo_worksheet = lo_excel-&gt;get_active_worksheet( ).
  lo_worksheet-&gt;set_title( ip_title = &apos;Cell data types&apos; ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;A&apos; ip_row = 1 ip_value = &apos;Number as String&apos;
                          ip_abap_type = lc_typekind_string ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;A&apos; ip_row = 2 ip_value = &apos;11&apos;
                          ip_abap_type = lc_typekind_string ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;B&apos; ip_row = 1 ip_value = &apos;String&apos;
                          ip_abap_type = lc_typekind_string ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;B&apos; ip_row = 2 ip_value = &apos;Negative Value&apos;
                          ip_abap_type = lc_typekind_string ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;C&apos; ip_row = 1 ip_value = &apos;Packed&apos;
                          ip_abap_type = lc_typekind_string ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;C&apos; ip_row = 2 ip_value = &apos;50000.00-&apos;
                          ip_abap_type = lc_typekind_packed ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;D&apos; ip_row = 1 ip_value = &apos;Number with Percentage&apos;
                          ip_abap_type = lc_typekind_string ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;D&apos; ip_row = 2 ip_value = &apos;0 %&apos;
                          ip_abap_type = lc_typekind_num ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;E&apos; ip_row = 1 ip_value = &apos;Date&apos;
                          ip_abap_type = lc_typekind_string ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;E&apos; ip_row = 2 ip_value = &apos;20110831&apos;
                          ip_abap_type = lc_typekind_date ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;B&apos; ip_row = 3 ip_value = &apos;Positive Value&apos;
                          ip_abap_type = lc_typekind_string ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;C&apos; ip_row = 3 ip_value = &apos;5000.00&apos;
                          ip_abap_type = lc_typekind_packed ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;D&apos; ip_row = 3 ip_value = &apos;50 %&apos;
                          ip_abap_type = lc_typekind_num ).

  column_dimension = lo_worksheet-&gt;get_column_dimension( ip_column = &apos;A&apos; ).
  column_dimension-&gt;set_auto_size( abap_true ).
  column_dimension = lo_worksheet-&gt;get_column_dimension( ip_column = &apos;B&apos; ).
  column_dimension-&gt;set_auto_size( abap_true ).
  column_dimension = lo_worksheet-&gt;get_column_dimension( ip_column = &apos;C&apos; ).
  column_dimension-&gt;set_auto_size( abap_true ).
  column_dimension = lo_worksheet-&gt;get_column_dimension( ip_column = &apos;D&apos; ).
  column_dimension-&gt;set_auto_size( abap_true ).
  column_dimension = lo_worksheet-&gt;get_column_dimension( ip_column = &apos;E&apos; ).
  column_dimension-&gt;set_auto_size( abap_true ).

  CREATE OBJECT lo_excel_writer TYPE zcl_excel_writer_2007.
  lv_file = lo_excel_writer-&gt;write_file( lo_excel ).

  &quot; Convert to binary
  CALL FUNCTION &apos;SCMS_XSTRING_TO_BINARY&apos;
    EXPORTING
      buffer        = lv_file
    IMPORTING
      output_length = lv_bytecount
    TABLES
      binary_tab    = lt_file_tab.
*  &quot; This method is only available on AS ABAP &gt; 6.40
*  lt_file_tab = cl_bcs_convert=&gt;xstring_to_solix( iv_xstring  = lv_file ).
*  lv_bytecount = xstrlen( lv_file ).

  &quot; Save the file
  cl_gui_frontend_services=&gt;gui_download( EXPORTING bin_filesize = lv_bytecount
                                                    filename     = lv_full_path
                                                    filetype     = &apos;BIN&apos;
                                           CHANGING data_tab     = lt_file_tab ).</source>
</PROG>
