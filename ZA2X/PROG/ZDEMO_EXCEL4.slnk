<?xml version="1.0" encoding="utf-16"?>
<PROG NAME="ZDEMO_EXCEL4" VARCL="X" SUBC="1" CNAM="FEMIA" CDAT="20100711" UNAM="DEVELOPER" UDAT="20111229" VERN="000039" RSTAT="T" RMAND="001" RLOAD="E" FIXPT="X" SDATE="20111229" STIME="193218" IDATE="20111229" ITIME="193218" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="abap2xlsx Demo: Create XLXS with multiple sheets" LENGTH="48 "/>
  </language>
 </textPool>
 <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZDEMO_EXCEL4
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;
*&amp;---------------------------------------------------------------------*

REPORT  zdemo_excel4.

DATA: lo_excel                TYPE REF TO zcl_excel,
      lo_excel_writer         TYPE REF TO zif_excel_writer,
      lo_worksheet            TYPE REF TO zcl_excel_worksheet,
      lo_hyperlink            TYPE REF TO zcl_excel_hyperlink.

DATA: lv_file                 TYPE xstring,
      lv_bytecount            TYPE i,
      lt_file_tab             TYPE solix_tab.

DATA: lv_full_path      TYPE string,
      lv_workdir        TYPE string,
      lv_file_separator TYPE c.

CONSTANTS: lv_default_file_name TYPE string VALUE &apos;04_Sheets.xlsx&apos;.

PARAMETERS: p_path TYPE zexcel_export_dir.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_path.
  lv_workdir = p_path.
  cl_gui_frontend_services=&gt;directory_browse( EXPORTING initial_folder  = lv_workdir
                                              CHANGING  selected_folder = lv_workdir ).
  p_path = lv_workdir.

INITIALIZATION.
  cl_gui_frontend_services=&gt;get_sapgui_workdir( CHANGING sapworkdir = lv_workdir ).
  cl_gui_cfw=&gt;flush( ).
  p_path = lv_workdir.

START-OF-SELECTION.

  IF p_path IS INITIAL.
    p_path = lv_workdir.
  ENDIF.
  cl_gui_frontend_services=&gt;get_file_separator( CHANGING file_separator = lv_file_separator ).
  CONCATENATE p_path lv_file_separator lv_default_file_name INTO lv_full_path.

  &quot; Creates active sheet
  CREATE OBJECT lo_excel.

  &quot; Get active sheet
  lo_worksheet = lo_excel-&gt;get_active_worksheet( ).
  lo_worksheet-&gt;set_title( ip_title = &apos;Sheet1&apos; ).
  lo_worksheet-&gt;zif_excel_sheet_properties~selected = zif_excel_sheet_properties=&gt;c_selected.
  lo_worksheet-&gt;set_cell( ip_column = &apos;B&apos; ip_row = 2 ip_value = &apos;This is the first sheet&apos; ).
  lo_hyperlink = zcl_excel_hyperlink=&gt;create_internal_link( iv_location = &apos;Sheet2!B2&apos; ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;B&apos; ip_row = 3 ip_value = &apos;This is link to second sheet&apos; ip_hyperlink = lo_hyperlink ).

  lo_worksheet-&gt;sheet_setup-&gt;set_page_margins( ip_header = &apos;1&apos; ip_footer = &apos;1&apos; ip_unit = &apos;cm&apos; ).
  lo_worksheet-&gt;sheet_setup-&gt;black_and_white   = &apos;X&apos;.
  lo_worksheet-&gt;sheet_setup-&gt;fit_to_page       = &apos;X&apos;.  &quot; you should turn this on to activate fit_to_height and fit_to_width
  lo_worksheet-&gt;sheet_setup-&gt;fit_to_height     = 0.    &quot; used only if ip_fit_to_page = &apos;X&apos;
  lo_worksheet-&gt;sheet_setup-&gt;fit_to_width      = 2.    &quot; used only if ip_fit_to_page = &apos;X&apos;
  lo_worksheet-&gt;sheet_setup-&gt;orientation       = zcl_excel_sheet_setup=&gt;c_orientation_landscape.
  lo_worksheet-&gt;sheet_setup-&gt;page_order        = zcl_excel_sheet_setup=&gt;c_ord_downthenover.
  lo_worksheet-&gt;sheet_setup-&gt;paper_size        = zcl_excel_sheet_setup=&gt;c_papersize_a4.
  lo_worksheet-&gt;sheet_setup-&gt;scale             = 80.   &quot; used only if ip_fit_to_page = SPACE



  lo_worksheet = lo_excel-&gt;add_new_worksheet( ).
  lo_worksheet-&gt;set_title( ip_title = &apos;Sheet2&apos; ).
  lo_worksheet-&gt;zif_excel_sheet_properties~selected = zif_excel_sheet_properties=&gt;c_selected.
  lo_worksheet-&gt;set_cell( ip_column = &apos;B&apos; ip_row = 2 ip_value = &apos;This is the second sheet&apos; ).
  lo_hyperlink = zcl_excel_hyperlink=&gt;create_internal_link( iv_location = &apos;Sheet1!B2&apos; ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;B&apos; ip_row = 3 ip_value = &apos;This is link to first sheet&apos; ip_hyperlink = lo_hyperlink ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;B&apos; ip_row = 4 ip_value = &apos;Sheet3 is hidden&apos; ).

  lo_worksheet = lo_excel-&gt;add_new_worksheet( ).
  lo_worksheet-&gt;set_title( ip_title = &apos;Sheet3&apos; ).
  lo_worksheet-&gt;zif_excel_sheet_properties~hidden = zif_excel_sheet_properties=&gt;c_hidden.

  lo_worksheet = lo_excel-&gt;add_new_worksheet( ).
  lo_worksheet-&gt;set_title( ip_title = &apos;Sheet4&apos; ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;B&apos; ip_row = 2 ip_value = &apos;Cell B3 has value 0&apos; ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;B&apos; ip_row = 3 ip_value = 0 ).
  lo_worksheet-&gt;zif_excel_sheet_properties~show_zeros = zif_excel_sheet_properties=&gt;c_hidezero.

  lo_excel-&gt;set_active_sheet_index_by_name( &apos;Sheet1&apos; ).

  CREATE OBJECT lo_excel_writer TYPE zcl_excel_writer_2007.
  lv_file = lo_excel_writer-&gt;write_file( lo_excel ).

  &quot; Convert to binary
  CALL FUNCTION &apos;SCMS_XSTRING_TO_BINARY&apos;
    EXPORTING
      buffer        = lv_file
    IMPORTING
      output_length = lv_bytecount
    TABLES
      binary_tab    = lt_file_tab.
*  &quot; This method is only available on AS ABAP &gt; 6.40
*  lt_file_tab = cl_bcs_convert=&gt;xstring_to_solix( iv_xstring  = lv_file ).
*  lv_bytecount = xstrlen( lv_file ).

  &quot; Save the file
  cl_gui_frontend_services=&gt;gui_download( EXPORTING bin_filesize = lv_bytecount
                                                    filename     = lv_full_path
                                                    filetype     = &apos;BIN&apos;
                                           CHANGING data_tab     = lt_file_tab ).</source>
</PROG>
