<?xml version="1.0" encoding="utf-16"?>
<PROG NAME="ZDEMO_EXCEL2" VARCL="X" SUBC="1" CNAM="FEMIA" CDAT="20100711" UNAM="BCUSER" UDAT="20110425" VERN="000042" RSTAT="T" RMAND="001" RLOAD="E" FIXPT="X" SDATE="20110425" STIME="232237" IDATE="20110425" ITIME="232237" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="abap2xlsx Demo: Styles" LENGTH="22 "/>
   <textElement ID="S" KEY="P_PATH" ENTRY="D       ." LENGTH="24 "/>
   <textElement ID="S" KEY="P_READER" ENTRY="        Write back after using Reader" LENGTH="37 "/>
  </language>
 </textPool>
 <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZDEMO_EXCEL2
*&amp; Test Styles for ABAP2XLSX
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;
*&amp;---------------------------------------------------------------------*

REPORT  zdemo_excel2.

DATA: lo_excel                TYPE REF TO zcl_excel,
      lo_excel_writer         TYPE REF TO zif_excel_writer,
      lo_excel_reader         TYPE REF TO zif_excel_reader,
      lo_worksheet            TYPE REF TO zcl_excel_worksheet,
      lo_style_bold           TYPE REF TO zcl_excel_style,
      lo_style_underline      TYPE REF TO zcl_excel_style,
      lo_style_filled         TYPE REF TO zcl_excel_style,
      lo_style_border         TYPE REF TO zcl_excel_style,
      lo_style_button         TYPE REF TO zcl_excel_style,
      lo_border_dark          TYPE REF TO zcl_excel_style_border,
      lo_border_light         TYPE REF TO zcl_excel_style_border.

DATA: lv_style_bold_guid         TYPE zexcel_cell_style,
      lv_style_underline_guid    TYPE zexcel_cell_style,
      lv_style_filled_guid       TYPE zexcel_cell_style,
      lv_style_filled_green_guid TYPE zexcel_cell_style,
      lv_style_border_guid       TYPE zexcel_cell_style,
      lv_style_button_guid       TYPE zexcel_cell_style.

DATA: lv_file                 TYPE xstring,
      lv_bytecount            TYPE i,
      lt_file_tab             TYPE solix_tab.

DATA: lv_full_path      TYPE string,
      lv_workdir        TYPE string,
      lv_file_separator TYPE c.

CONSTANTS: lv_default_file_name TYPE string VALUE &apos;02_Styles.xlsx&apos;.

PARAMETERS: p_path TYPE zexcel_export_dir,
            p_reader TYPE abap_bool AS CHECKBOX.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_path.
  lv_workdir = p_path.
  cl_gui_frontend_services=&gt;directory_browse( EXPORTING initial_folder  = lv_workdir
                                              CHANGING  selected_folder = lv_workdir ).
  p_path = lv_workdir.

INITIALIZATION.
  cl_gui_frontend_services=&gt;get_sapgui_workdir( CHANGING sapworkdir = lv_workdir ).
  cl_gui_cfw=&gt;flush( ).
  p_path = lv_workdir.

START-OF-SELECTION.

  IF p_path IS INITIAL.
    p_path = lv_workdir.
  ENDIF.
  cl_gui_frontend_services=&gt;get_file_separator( CHANGING file_separator = lv_file_separator ).
  CONCATENATE p_path lv_file_separator lv_default_file_name INTO lv_full_path.

  &quot; Creates active sheet
  CREATE OBJECT lo_excel.

  &quot; Create border object
  CREATE OBJECT lo_border_dark.
  lo_border_dark-&gt;border_color = zcl_excel_style_color=&gt;c_black.
  lo_border_dark-&gt;border_style = zcl_excel_style_border=&gt;c_border_thin.
  CREATE OBJECT lo_border_light.
  lo_border_light-&gt;border_color = zcl_excel_style_color=&gt;c_gray.
  lo_border_light-&gt;border_style = zcl_excel_style_border=&gt;c_border_thin.
  &quot; Create a bold / italic style
  lo_style_bold               = lo_excel-&gt;add_new_style( ).
  lo_style_bold-&gt;font-&gt;bold   = abap_true.
  lo_style_bold-&gt;font-&gt;italic = abap_true.
  lo_style_bold-&gt;font-&gt;color  = zcl_excel_style_color=&gt;c_red.
  lv_style_bold_guid          = lo_style_bold-&gt;get_guid( ).
  &quot; Create an underline double style
  lo_style_underline                        = lo_excel-&gt;add_new_style( ).
  lo_style_underline-&gt;font-&gt;underline       = abap_true.
  lo_style_underline-&gt;font-&gt;underline_mode  = zcl_excel_style_font=&gt;c_underline_double.
  lv_style_underline_guid                   = lo_style_underline-&gt;get_guid( ).
  &quot; Create filled style yellow
  lo_style_filled                 = lo_excel-&gt;add_new_style( ).
  lo_style_filled-&gt;fill-&gt;filltype = zcl_excel_style_fill=&gt;c_fill_solid.
  lo_style_filled-&gt;fill-&gt;fgcolor  = zcl_excel_style_color=&gt;c_yellow.
  lv_style_filled_guid            = lo_style_filled-&gt;get_guid( ).
  &quot; Create border with button effects
  lo_style_button                   = lo_excel-&gt;add_new_style( ).
  lo_style_button-&gt;borders-&gt;right   = lo_border_dark.
  lo_style_button-&gt;borders-&gt;down    = lo_border_dark.
  lo_style_button-&gt;borders-&gt;left    = lo_border_light.
  lo_style_button-&gt;borders-&gt;top     = lo_border_light.
  lv_style_button_guid              = lo_style_button-&gt;get_guid( ).
  &quot;Create style with border
  lo_style_border                       = lo_excel-&gt;add_new_style( ).
  lo_style_border-&gt;borders-&gt;allborders  = lo_border_dark.
  lv_style_border_guid                  = lo_style_border-&gt;get_guid( ).
  &quot; Create filled style green
  lo_style_filled                 = lo_excel-&gt;add_new_style( ).
  lo_style_filled-&gt;fill-&gt;filltype = zcl_excel_style_fill=&gt;c_fill_solid.
  lo_style_filled-&gt;fill-&gt;fgcolor  = zcl_excel_style_color=&gt;c_green.
  lv_style_filled_green_guid            = lo_style_filled-&gt;get_guid( ).

  &quot; Get active sheet
  lo_worksheet = lo_excel-&gt;get_active_worksheet( ).
  lo_worksheet-&gt;set_title( ip_title = &apos;Styles&apos; ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;B&apos; ip_row = 2 ip_value = &apos;Hello world&apos; ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;C&apos; ip_row = 3 ip_value = &apos;Bold text&apos;            ip_style = lv_style_bold_guid ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;D&apos; ip_row = 4 ip_value = &apos;Underlined text&apos;      ip_style = lv_style_underline_guid ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;B&apos; ip_row = 5 ip_value = &apos;Filled text&apos;          ip_style = lv_style_filled_guid ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;C&apos; ip_row = 6 ip_value = &apos;Borders&apos;              ip_style = lv_style_border_guid ).
  lo_worksheet-&gt;set_cell( ip_column = &apos;D&apos; ip_row = 7 ip_value = &apos;I&apos;&apos;m not a button :)&apos; ip_style = lv_style_button_guid ).
  &quot; Fill the cell and apply one style
  lo_worksheet-&gt;set_cell( ip_column = &apos;B&apos; ip_row = 6 ip_value = &apos;Filled text&apos;          ip_style = lv_style_filled_guid ).
  &quot; Change the style
  lo_worksheet-&gt;set_cell_style( ip_column = &apos;B&apos; ip_row = 6 ip_style = lv_style_filled_green_guid ).
  &quot; Add Style to an empty cell to test Fix for Issue
  &quot;#44 Exception ZCX_EXCEL thrown when style is set for an empty cell
  &quot; https://code.sdn.sap.com/spaces/abap2xlsx/tickets/44-exception-zcx_excel-thrown-when-style-is-set-for-an-empty-cell
  lo_worksheet-&gt;set_cell_style( ip_column = &apos;E&apos; ip_row = 6 ip_style = lv_style_filled_green_guid ).

  CREATE OBJECT lo_excel_writer TYPE zcl_excel_writer_2007.
  lv_file = lo_excel_writer-&gt;write_file( lo_excel ).

  &quot; Convert to binary
  CALL FUNCTION &apos;SCMS_XSTRING_TO_BINARY&apos;
    EXPORTING
      buffer        = lv_file
    IMPORTING
      output_length = lv_bytecount
    TABLES
      binary_tab    = lt_file_tab.
*  &quot; This method is only available on AS ABAP &gt; 6.40
*  lt_file_tab = cl_bcs_convert=&gt;xstring_to_solix( iv_xstring  = lv_file ).
*  lv_bytecount = xstrlen( lv_file ).

  &quot; Save the file
  cl_gui_frontend_services=&gt;gui_download( EXPORTING bin_filesize = lv_bytecount
                                                    filename     = lv_full_path
                                                    filetype     = &apos;BIN&apos;
                                           CHANGING data_tab     = lt_file_tab ).

  IF p_reader = abap_true.
    CREATE OBJECT lo_excel_reader TYPE zcl_excel_reader_2007.
    CREATE OBJECT lo_excel_writer TYPE zcl_excel_writer_2007.
    lo_excel = lo_excel_reader-&gt;load_file( lv_full_path ).
    lv_file = lo_excel_writer-&gt;write_file( lo_excel ).
    REPLACE &apos;.xlsx&apos; IN lv_full_path WITH &apos;FromReader.xlsx&apos;.

    &quot; Convert to binary
    CALL FUNCTION &apos;SCMS_XSTRING_TO_BINARY&apos;
      EXPORTING
        buffer        = lv_file
      IMPORTING
        output_length = lv_bytecount
      TABLES
        binary_tab    = lt_file_tab.

    &quot; Save the file
    cl_gui_frontend_services=&gt;gui_download( EXPORTING bin_filesize = lv_bytecount
                                                      filename     = lv_full_path
                                                      filetype     = &apos;BIN&apos;
                                             CHANGING data_tab     = lt_file_tab ).
  ENDIF.</source>
</PROG>
