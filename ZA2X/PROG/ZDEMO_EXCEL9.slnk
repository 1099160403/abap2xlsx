<?xml version="1.0" encoding="utf-16"?>
<PROG NAME="ZDEMO_EXCEL9" VARCL="X" SUBC="1" CNAM="FEMIA" CDAT="20100713" UNAM="DEVELOPER" UDAT="20120112" VERN="000074" RSTAT="T" RMAND="001" RLOAD="E" FIXPT="X" SDATE="20120112" STIME="084137" IDATE="20120112" ITIME="084137" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="abap2xlsx Demo: Data validations" LENGTH="32 "/>
   <textElement ID="S" KEY="P_PATH" ENTRY="D       ." LENGTH="24 "/>
   <textElement ID="S" KEY="P_SBOOK" ENTRY="        Export SBOOK to Excel?" LENGTH="30 "/>
  </language>
 </textPool>
 <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZDEMO_EXCEL9
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp; abap2xlsx Demo: Data validations
*&amp;
*&amp;---------------------------------------------------------------------*

REPORT  zdemo_excel9.

CONSTANTS: c_fruits     TYPE string VALUE &apos;Fruits&apos;,
           c_vegetables TYPE string VALUE &apos;Vegetables&apos;,
           c_meat       TYPE string VALUE &apos;Meat&apos;,
           c_fish       TYPE string VALUE &apos;Fish&apos;.

DATA: lo_excel                TYPE REF TO zcl_excel,
      lo_excel_writer         TYPE REF TO zif_excel_writer,
      lo_worksheet            TYPE REF TO zcl_excel_worksheet,
      lo_range                TYPE REF TO zcl_excel_range,
      lo_data_validation      TYPE REF TO zcl_excel_data_validation.

DATA: row TYPE zexcel_cell_row.

DATA: lv_file                 TYPE xstring,
      lv_bytecount            TYPE i,
      lt_file_tab             TYPE solix_tab.

DATA: lv_full_path      TYPE string,
      lv_workdir        TYPE string,
      lv_title          TYPE zexcel_sheet_title,
      lv_file_separator TYPE c.

CONSTANTS: lv_default_file_name TYPE string VALUE &apos;09_DataValidation.xlsx&apos;.

PARAMETERS: p_path  TYPE zexcel_export_dir,
            p_sbook TYPE flag.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_path.
  lv_workdir = p_path.
  cl_gui_frontend_services=&gt;directory_browse( EXPORTING initial_folder  = lv_workdir
                                              CHANGING  selected_folder = lv_workdir ).
  p_path = lv_workdir.

INITIALIZATION.
  cl_gui_frontend_services=&gt;get_sapgui_workdir( CHANGING sapworkdir = lv_workdir ).
  cl_gui_cfw=&gt;flush( ).
  p_path = lv_workdir.

START-OF-SELECTION.

  IF p_path IS INITIAL.
    p_path = lv_workdir.
  ENDIF.
  cl_gui_frontend_services=&gt;get_file_separator( CHANGING file_separator = lv_file_separator ).
  CONCATENATE p_path lv_file_separator lv_default_file_name INTO lv_full_path.

  &quot; Creates active sheet
  CREATE OBJECT lo_excel.

  &quot; Get active sheet
  lo_worksheet        = lo_excel-&gt;get_active_worksheet( ).
  lv_title = &apos;Data Validation&apos;.
  lo_worksheet-&gt;set_title( lv_title ).
  &quot; Set values for dropdown
  lo_worksheet-&gt;set_cell( ip_row = 2 ip_column = &apos;A&apos; ip_value = c_fish ).
  lo_worksheet-&gt;set_cell( ip_row = 4 ip_column = &apos;A&apos; ip_value = &apos;Anchovy&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 5 ip_column = &apos;A&apos; ip_value = &apos;Carp&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 6 ip_column = &apos;A&apos; ip_value = &apos;Catfish&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 7 ip_column = &apos;A&apos; ip_value = &apos;Cod&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 8 ip_column = &apos;A&apos; ip_value = &apos;Eel&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 9 ip_column = &apos;A&apos; ip_value = &apos;Haddock&apos; ).

  lo_range            = lo_excel-&gt;add_new_range( ).
  lo_range-&gt;name      = c_fish.
  lo_range-&gt;set_value( ip_sheet_name    = lv_title
                       ip_start_column  = &apos;A&apos;
                       ip_start_row     = 4
                       ip_stop_column   = &apos;A&apos;
                       ip_stop_row      = 9 ).

  lo_worksheet-&gt;set_cell( ip_row = 2 ip_column = &apos;B&apos; ip_value = c_meat ).
  lo_worksheet-&gt;set_cell( ip_row = 4 ip_column = &apos;B&apos; ip_value = &apos;Pork&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 5 ip_column = &apos;B&apos; ip_value = &apos;Beef&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 6 ip_column = &apos;B&apos; ip_value = &apos;Chicken&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 7 ip_column = &apos;B&apos; ip_value = &apos;Turkey&apos; ).

  lo_range            = lo_excel-&gt;add_new_range( ).
  lo_range-&gt;name      = c_meat.
  lo_range-&gt;set_value( ip_sheet_name    = lv_title
                       ip_start_column  = &apos;B&apos;
                       ip_start_row     = 4
                       ip_stop_column   = &apos;B&apos;
                       ip_stop_row      = 7 ).

  lo_worksheet-&gt;set_cell( ip_row = 2 ip_column = &apos;C&apos; ip_value = c_fruits ).
  lo_worksheet-&gt;set_cell( ip_row = 4 ip_column = &apos;C&apos; ip_value = &apos;Apple&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 5 ip_column = &apos;C&apos; ip_value = &apos;Banana&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 6 ip_column = &apos;C&apos; ip_value = &apos;Blueberry&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 7 ip_column = &apos;C&apos; ip_value = &apos;Ananas&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 8 ip_column = &apos;C&apos; ip_value = &apos;Grapes&apos; ).

  lo_range            = lo_excel-&gt;add_new_range( ).
  lo_range-&gt;name      = c_fruits.
  lo_range-&gt;set_value( ip_sheet_name    = lv_title
                       ip_start_column  = &apos;C&apos;
                       ip_start_row     = 4
                       ip_stop_column   = &apos;C&apos;
                       ip_stop_row      = 8 ).

  lo_worksheet-&gt;set_cell( ip_row = 2 ip_column = &apos;D&apos; ip_value = c_vegetables ).
  lo_worksheet-&gt;set_cell( ip_row = 4 ip_column = &apos;D&apos; ip_value = &apos;Cucumber&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 5 ip_column = &apos;D&apos; ip_value = &apos;Sweet pepper &apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 6 ip_column = &apos;D&apos; ip_value = &apos;Lettuce&apos; ).

  lo_range            = lo_excel-&gt;add_new_range( ).
  lo_range-&gt;name      = c_vegetables.
  lo_range-&gt;set_value( ip_sheet_name    = lv_title
                       ip_start_column  = &apos;D&apos;
                       ip_start_row     = 4
                       ip_stop_column   = &apos;D&apos;
                       ip_stop_row      = 6 ).

  lo_worksheet        = lo_excel-&gt;add_new_worksheet( ).
  lv_title = &apos;Table with Data Validation&apos;.
  lo_worksheet-&gt;set_title( lv_title ).

  &quot; Maximum Text length
  lo_worksheet-&gt;set_cell(  ip_row = 1 ip_column = &apos;A&apos; ip_value = &apos;Validate Maximum Text length of &lt;= 10 in Cell A2:&apos; ).
  lo_worksheet-&gt;set_cell(  ip_row = 2 ip_column = &apos;A&apos; ip_value = &apos;abcdefghij&apos; ).
  lo_data_validation              = lo_worksheet-&gt;add_new_data_validation( ).
  lo_data_validation-&gt;type        = zcl_excel_data_validation=&gt;c_type_textlength.
  lo_data_validation-&gt;operator    = zcl_excel_data_validation=&gt;c_operator_lessthanorequal.
  lo_data_validation-&gt;formula1    = 10.
  lo_data_validation-&gt;cell_row    = 2.
  lo_data_validation-&gt;cell_column = &apos;A&apos;.

  &quot; Integer Value between 1 and 10
  lo_worksheet-&gt;set_cell(  ip_row = 4 ip_column = &apos;A&apos; ip_value = &apos;Validate Integer Value between 1 and 10 in Cell A5:&apos; ).
  lo_worksheet-&gt;set_cell(  ip_row = 5 ip_column = &apos;A&apos; ip_value = &apos;5&apos; ).
  lo_data_validation              = lo_worksheet-&gt;add_new_data_validation( ).
  lo_data_validation-&gt;type        = zcl_excel_data_validation=&gt;c_type_whole.
  lo_data_validation-&gt;operator    = zcl_excel_data_validation=&gt;c_operator_between.
  lo_data_validation-&gt;formula1    = 1.
  lo_data_validation-&gt;formula2    = 10.
  lo_data_validation-&gt;prompttitle = &apos;Range&apos;.
  lo_data_validation-&gt;prompt      = &apos;Enter a value between 1 and 10&apos;.
  lo_data_validation-&gt;errortitle  = &apos;Error&apos;.
  lo_data_validation-&gt;error       = &apos;You have entered a wrong value. Please use only numbers between 1 and 10.&apos;.
  lo_data_validation-&gt;cell_row    = 5.
  lo_data_validation-&gt;cell_column = &apos;A&apos;.

  &quot; There was an error when data validation was combined with cell merges this should test that:
  lo_worksheet-&gt;set_cell(  ip_row = 10 ip_column = &apos;A&apos; ip_value = &apos;Demo for data validation with a dropdown list&apos; ).
  lo_worksheet-&gt;set_merge( ip_row = 10 ip_column_start = &apos;A&apos; ip_column_end = &apos;F&apos; ).

  &quot; Headlines
  lo_worksheet-&gt;set_cell( ip_row = 11 ip_column = &apos;A&apos; ip_value = c_fruits ).
  lo_worksheet-&gt;set_cell( ip_row = 11 ip_column = &apos;B&apos; ip_value = c_vegetables ).

  row = 12.
  WHILE row &lt; 20. &quot; Starting with 14500 the data validation is dropped 14000 are still ok
    &quot; 1st validation
    lo_data_validation              = lo_worksheet-&gt;add_new_data_validation( ).
    lo_data_validation-&gt;type        = zcl_excel_data_validation=&gt;c_type_list.
    lo_data_validation-&gt;formula1    = c_fruits.
    lo_data_validation-&gt;cell_row    = row.
    lo_data_validation-&gt;cell_column = &apos;A&apos;.
    lo_worksheet-&gt;set_cell( ip_row = row ip_column = &apos;A&apos; ip_value = &apos;Select a value&apos; ).
                                                            &quot; 2nd
    lo_data_validation              = lo_worksheet-&gt;add_new_data_validation( ).
    lo_data_validation-&gt;type        = zcl_excel_data_validation=&gt;c_type_list.
    lo_data_validation-&gt;formula1    = c_vegetables.
    lo_data_validation-&gt;cell_row    = row.
    lo_data_validation-&gt;cell_column = &apos;B&apos;.
    lo_worksheet-&gt;set_cell( ip_row = row ip_column = &apos;B&apos; ip_value = &apos;Select a value&apos; ).
                                                            &quot; 3rd
    lo_data_validation              = lo_worksheet-&gt;add_new_data_validation( ).
    lo_data_validation-&gt;type        = zcl_excel_data_validation=&gt;c_type_list.
    lo_data_validation-&gt;formula1    = c_meat.
    lo_data_validation-&gt;cell_row    = row.
    lo_data_validation-&gt;cell_column = &apos;C&apos;.
    lo_worksheet-&gt;set_cell( ip_row = row ip_column = &apos;C&apos; ip_value = &apos;Select a value&apos; ).
                                                            &quot; 4th
    lo_data_validation              = lo_worksheet-&gt;add_new_data_validation( ).
    lo_data_validation-&gt;type        = zcl_excel_data_validation=&gt;c_type_list.
    lo_data_validation-&gt;formula1    = c_fish.
    lo_data_validation-&gt;cell_row    = row.
    lo_data_validation-&gt;cell_column = &apos;D&apos;.
    lo_worksheet-&gt;set_cell( ip_row = row ip_column = &apos;D&apos; ip_value = &apos;Select a value&apos; ).
    &quot; Increment row
    row = row + 1.
  ENDWHILE.

  IF p_sbook = abap_true.
    DATA: bookings type TABLE OF sbook.

    lo_worksheet        = lo_excel-&gt;add_new_worksheet( ).
    lv_title = &apos;SBOOK&apos;.
    lo_worksheet-&gt;set_title( lv_title ).

    SELECT * from sbook INTO TABLE bookings UP TO 4000 ROWS.

    lo_worksheet-&gt;bind_table(
      EXPORTING
        ip_table          = bookings
*        it_field_catalog  =     &quot; Table binding field catalog
*        is_table_settings =     &quot; Excel table binding settings
*      IMPORTING
*        es_table_settings =     &quot; Excel table binding settings
    ).
  ENDIF.

  CREATE OBJECT lo_excel_writer TYPE zcl_excel_writer_2007.
  lv_file = lo_excel_writer-&gt;write_file( lo_excel ).

  &quot; Convert to binary
  CALL FUNCTION &apos;SCMS_XSTRING_TO_BINARY&apos;
    EXPORTING
      buffer        = lv_file
    IMPORTING
      output_length = lv_bytecount
    TABLES
      binary_tab    = lt_file_tab.
*  &quot; This method is only available on AS ABAP &gt; 6.40
*  lt_file_tab = cl_bcs_convert=&gt;xstring_to_solix( iv_xstring  = lv_file ).
*  lv_bytecount = xstrlen( lv_file ).

  &quot; Save the file
  cl_gui_frontend_services=&gt;gui_download( EXPORTING bin_filesize = lv_bytecount
                                                    filename     = lv_full_path
                                                    filetype     = &apos;BIN&apos;
                                           CHANGING data_tab     = lt_file_tab ).</source>
</PROG>
