<?xml version="1.0" encoding="utf-16"?>
<PROG NAME="ZDEMO_EXCEL33" VARCL="X" SUBC="1" CNAM="RTURNHEIM" CDAT="20120311" UNAM="RTURNHEIM" UDAT="20120313" VERN="000024" RSTAT="T" RMAND="001" RLOAD="E" FIXPT="X" SDATE="20120316" STIME="030233" IDATE="20120313" ITIME="160944" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="abap2xlsx Demo: Autofilter" LENGTH="26 "/>
   <textElement ID="S" KEY="P_EMPTY" ENTRY="        Leave Table Empty" LENGTH="25 "/>
   <textElement ID="S" KEY="P_PATH" ENTRY="D       ." LENGTH="24 "/>
  </language>
 </textPool>
 <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZDEMO_EXCEL3
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;
*&amp;---------------------------------------------------------------------*

REPORT  zdemo_excel33.

TYPE-POOLS: abap.

DATA: lo_excel                TYPE REF TO zcl_excel,
      lo_excel_writer         TYPE REF TO zif_excel_writer,
      lo_worksheet            TYPE REF TO zcl_excel_worksheet,
      lo_converter            TYPE REF TO zcl_excel_converter,
      lo_autofilter           TYPE REF TO zcl_excel_autofilter.

DATA lt_test TYPE TABLE OF sflight.

DATA: lv_file                 TYPE xstring,
      lv_bytecount            TYPE i,
      lt_file_tab             TYPE solix_tab.

DATA: lv_full_path      TYPE string,
      lv_workdir        TYPE string,
      lv_file_separator TYPE c.

DATA: lv_title TYPE zexcel_sheet_title,
      lt_carr  TYPE TABLE OF scarr,
      row TYPE zexcel_cell_row VALUE 2,
      lt_dfies TYPE STANDARD TABLE OF dfies,
      ls_dfies TYPE dfies,
      l_row_int TYPE i,
      l_col_int TYPE i,
      l_col_alpha TYPE zexcel_cell_column_alpha,
      l_cell_value TYPE zexcel_cell_value,
      ls_area      TYPE zexcel_s_autofilter_area.
DATA: lo_data_validation  TYPE REF TO zcl_excel_data_validation.
FIELD-SYMBOLS: &lt;fs_test&gt; TYPE sflight,
               &lt;fs_fldval&gt; TYPE ANY.

CONSTANTS: c_airlines TYPE string VALUE &apos;Airlines&apos;.
CONSTANTS: lv_default_file_name TYPE string VALUE &apos;33_autofilter.xlsx&apos;.

PARAMETERS: p_path  TYPE zexcel_export_dir.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_path.
  lv_workdir = p_path.
  cl_gui_frontend_services=&gt;directory_browse( EXPORTING initial_folder  = lv_workdir
                                              CHANGING  selected_folder = lv_workdir ).
  p_path = lv_workdir.

INITIALIZATION.
  cl_gui_frontend_services=&gt;get_sapgui_workdir( CHANGING sapworkdir = lv_workdir ).
  cl_gui_cfw=&gt;flush( ).
  p_path = lv_workdir.

START-OF-SELECTION.

  IF p_path IS INITIAL.
    p_path = lv_workdir.
  ENDIF.
  cl_gui_frontend_services=&gt;get_file_separator( CHANGING file_separator = lv_file_separator ).
  CONCATENATE p_path lv_file_separator lv_default_file_name INTO lv_full_path.

  &quot; Creates active sheet
  CREATE OBJECT lo_excel.

  &quot; Get active sheet
  lo_worksheet = lo_excel-&gt;get_active_worksheet( ).
  lo_worksheet-&gt;set_title( ip_title = &apos;Internal table&apos;).

  SELECT * UP TO 500 ROWS FROM sflight INTO TABLE lt_test. &quot;#EC CI_NOWHERE

  CREATE OBJECT lo_converter.

  lo_converter-&gt;convert( EXPORTING
                            it_table     = lt_test
                            i_row_int    = 3
                            i_column_int = 2
                            io_worksheet = lo_worksheet
                         CHANGING
                            co_excel     = lo_excel ) .

  lo_autofilter = lo_excel-&gt;add_new_autofilter( io_sheet = lo_worksheet ) .

  ls_area-row_start = 3.
  ls_area-col_start = 3.
  DESCRIBE TABLE lt_test LINES l_row_int.
  ls_area-row_end = l_row_int + 3.
  ls_area-col_end = 3.

  lo_autofilter-&gt;set_filter_area( is_area = ls_area ).

  lo_worksheet-&gt;get_cell( EXPORTING
                             ip_column    = &apos;C&apos;
                             ip_row       = 5
                          IMPORTING
                             ep_value     = l_cell_value ).
  lo_autofilter-&gt;set_value( i_column = 3
                            i_value  = l_cell_value ).

  &quot; Write to Excel 2007
  CREATE OBJECT lo_excel_writer TYPE zcl_excel_writer_2007.
  lv_file = lo_excel_writer-&gt;write_file( lo_excel ).

  &quot; Convert to binary
  CALL FUNCTION &apos;SCMS_XSTRING_TO_BINARY&apos;
    EXPORTING
      buffer        = lv_file
    IMPORTING
      output_length = lv_bytecount
    TABLES
      binary_tab    = lt_file_tab.
*  &quot; This method is only available on AS ABAP &gt; 6.40
*  lt_file_tab = cl_bcs_convert=&gt;xstring_to_solix( iv_xstring  = lv_file ).
*  lv_bytecount = xstrlen( lv_file ).

  &quot; Save the file
  cl_gui_frontend_services=&gt;gui_download( EXPORTING bin_filesize = lv_bytecount
                                                    filename     = lv_full_path
                                                    filetype     = &apos;BIN&apos;
                                           CHANGING data_tab     = lt_file_tab ).</source>
</PROG>
