<?xml version="1.0" encoding="utf-16"?>
<PROG NAME="ZDEMO_EXCEL15" VARCL="X" SUBC="1" CNAM="BCUSER" CDAT="20100820" UNAM="FEMIA" UDAT="20101030" VERN="000021" RSTAT="T" RMAND="000" RLOAD="E" FIXPT="X" SDATE="20101217" STIME="224554" IDATE="20101030" ITIME="234140" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="ABAP2XLSX Reader Demo" LENGTH="21 "/>
   <textElement ID="S" KEY="P_NOOUT" ENTRY="        Hide output" LENGTH="19 "/>
   <textElement ID="S" KEY="P_PATH" ENTRY="        Select output path" LENGTH="26 "/>
  </language>
 </textPool>
 <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZDEMO_EXCEL15
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp; 2010-10-30, Gregor Wolf:
*&amp; Added the functionality to ouput the read table content
*&amp;---------------------------------------------------------------------*

REPORT  zdemo_excel15.

TYPE-POOLS: abap.

DATA: excel           TYPE REF TO zcl_excel,
      lo_excel_writer TYPE REF TO zif_excel_writer,
      reader          TYPE REF TO zif_excel_reader.

DATA: lv_file                 TYPE xstring,
      lv_bytecount            TYPE i,
      lt_file_tab             TYPE solix_tab.

DATA: lv_workdir        TYPE string,
      output_file_path  TYPE string,
      input_file_path   TYPE string,
      lv_file_separator TYPE c.

DATA: worksheet      TYPE REF TO zcl_excel_worksheet,
      highest_column TYPE zexcel_cell_column,
      highest_row    TYPE int4,
      column         TYPE zexcel_cell_column VALUE 1,
      col_str        TYPE zexcel_cell_column_alpha,
      row            TYPE int4               VALUE 1,
      value          TYPE zexcel_cell_value.

CONSTANTS: lv_default_file_name TYPE string VALUE &apos;15_iTabFromReader.xlsx&apos;,
           lv_default_input TYPE string VALUE &apos;03_iTab.xlsx&apos;.

PARAMETERS: p_path  TYPE string,
            p_noout TYPE xfeld DEFAULT abap_true.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_path.

  cl_gui_frontend_services=&gt;directory_browse( EXPORTING initial_folder  = p_path
  CHANGING selected_folder = p_path ).

INITIALIZATION.
  cl_gui_frontend_services=&gt;get_sapgui_workdir( CHANGING sapworkdir = lv_workdir ).
  p_path = lv_workdir.

START-OF-SELECTION.

  IF p_path IS INITIAL.
    p_path = lv_workdir.
  ENDIF.
  cl_gui_frontend_services=&gt;get_file_separator( CHANGING file_separator = lv_file_separator ).
  CONCATENATE p_path lv_file_separator lv_default_file_name INTO output_file_path.
  CONCATENATE p_path lv_file_separator lv_default_input INTO input_file_path.

  TRY.
      CREATE OBJECT reader TYPE zcl_excel_reader_2007.
      excel = reader-&gt;load_file( input_file_path ).

      IF p_noout EQ abap_false.
        worksheet = excel-&gt;get_active_worksheet( ).
        highest_column = worksheet-&gt;get_highest_column( ).
        highest_row    = worksheet-&gt;get_highest_row( ).

        WRITE: &apos;Highest column: &apos;, highest_column, &apos;Highest row: &apos;, highest_row.

        WHILE row &lt;= highest_row.
          WHILE column &lt;= highest_column.
            col_str = zcl_excel_common=&gt;convert_column2alpha( column ).
            worksheet-&gt;get_cell(
              EXPORTING
                ip_column = col_str
                ip_row    = row
              IMPORTING
                ep_value = value
            ).
            WRITE: value.
            column = column + 1.
          ENDWHILE.
          WRITE: /.
          column = 1.
          row = row + 1.
        ENDWHILE.
      ENDIF.
      CREATE OBJECT lo_excel_writer TYPE zcl_excel_writer_2007.
      lv_file = lo_excel_writer-&gt;write_file( excel ).

*   Convert to binary
      lt_file_tab = cl_bcs_convert=&gt;xstring_to_solix( iv_xstring  = lv_file ).
      lv_bytecount = XSTRLEN( lv_file ).

      &quot; Save the file
      cl_gui_frontend_services=&gt;gui_download( EXPORTING bin_filesize = lv_bytecount
                                                        filename     = output_file_path
                                                        filetype     = &apos;BIN&apos;
                                               CHANGING data_tab     = lt_file_tab ).

    CATCH zcx_excel.    &quot; Exceptions for ABAP2XLSX
  ENDTRY.</source>
</PROG>
