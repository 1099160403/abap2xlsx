<?xml version="1.0" encoding="utf-16"?>
<PROG NAME="ZDEMO_EXCEL15" VARCL="X" SUBC="1" CNAM="BCUSER" CDAT="20100820" UNAM="MYSSHT" UDAT="20111219" VERN="000035" RSTAT="T" RMAND="000" RLOAD="E" FIXPT="X" SDATE="20111219" STIME="051805" IDATE="20111219" ITIME="051805" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="abap2xlsx Demo: Reader" LENGTH="22 "/>
   <textElement ID="S" KEY="P_NOOUT" ENTRY="        Hide output" LENGTH="19 "/>
   <textElement ID="S" KEY="P_PATH" ENTRY="D       ." LENGTH="24 "/>
  </language>
 </textPool>
 <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZDEMO_EXCEL15
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp; 2010-10-30, Gregor Wolf:
*&amp; Added the functionality to ouput the read table content
*&amp; 2011-12-19, Shahrin Shahrulzaman:
*&amp; Added the functionality to have multiple input and output files
*&amp;---------------------------------------------------------------------*

REPORT  zdemo_excel15.

TYPE-POOLS: abap.

TYPES:
  BEGIN OF t_demo_excel15,
    input TYPE string,
    output TYPE string,
  END OF t_demo_excel15.

DATA: excel           TYPE REF TO zcl_excel,
      lo_excel_writer TYPE REF TO zif_excel_writer,
      reader          TYPE REF TO zif_excel_reader.

DATA: ex  TYPE REF TO zcx_excel,
      msg TYPE string.

DATA: lv_file                 TYPE xstring,
      lv_bytecount            TYPE i,
      lt_file_tab             TYPE solix_tab.

DATA: lv_workdir        TYPE string,
      output_file_path  TYPE string,
      input_file_path   TYPE string,
      lv_file_separator TYPE c.

DATA: worksheet      TYPE REF TO zcl_excel_worksheet,
      highest_column TYPE zexcel_cell_column,
      highest_row    TYPE int4,
      column         TYPE zexcel_cell_column VALUE 1,
      col_str        TYPE zexcel_cell_column_alpha,
      row            TYPE int4               VALUE 1,
      value          TYPE zexcel_cell_value.

DATA:
      lt_files       TYPE TABLE OF t_demo_excel15.
FIELD-SYMBOLS: &lt;wa_files&gt; TYPE t_demo_excel15.

PARAMETERS: p_path  TYPE zexcel_export_dir,
            p_noout TYPE xfeld DEFAULT abap_true.


AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_path.
  lv_workdir = p_path.
  cl_gui_frontend_services=&gt;directory_browse( EXPORTING initial_folder  = lv_workdir
                                              CHANGING  selected_folder = lv_workdir ).
  p_path = lv_workdir.

INITIALIZATION.
  cl_gui_frontend_services=&gt;get_sapgui_workdir( CHANGING sapworkdir = lv_workdir ).
  cl_gui_cfw=&gt;flush( ).
  p_path = lv_workdir.

  APPEND INITIAL LINE TO lt_files ASSIGNING &lt;wa_files&gt;.
  &lt;wa_files&gt;-input  = &apos;03_iTab.xlsx&apos;.
  &lt;wa_files&gt;-output = &apos;15_iTabFromReader.xlsx&apos;.
  APPEND INITIAL LINE TO lt_files ASSIGNING &lt;wa_files&gt;.
  &lt;wa_files&gt;-input  = &apos;08_Range.xlsx&apos;.
  &lt;wa_files&gt;-output = &apos;15_RangeFromReader.xlsx&apos;.

START-OF-SELECTION.

  IF p_path IS INITIAL.
    p_path = lv_workdir.
  ENDIF.
  cl_gui_frontend_services=&gt;get_file_separator( CHANGING file_separator = lv_file_separator ).

  LOOP AT lt_files ASSIGNING &lt;wa_files&gt;.
    CONCATENATE p_path lv_file_separator &lt;wa_files&gt;-output INTO output_file_path.
    CONCATENATE p_path lv_file_separator &lt;wa_files&gt;-input INTO input_file_path.

    TRY.
        CREATE OBJECT reader TYPE zcl_excel_reader_2007.
        excel = reader-&gt;load_file( input_file_path ).

        IF p_noout EQ abap_false.
          worksheet = excel-&gt;get_active_worksheet( ).
          highest_column = worksheet-&gt;get_highest_column( ).
          highest_row    = worksheet-&gt;get_highest_row( ).

          WRITE: &apos;Highest column: &apos;, highest_column, &apos;Highest row: &apos;, highest_row.
          WRITE: /.

          WHILE row &lt;= highest_row.
            WHILE column &lt;= highest_column.
              col_str = zcl_excel_common=&gt;convert_column2alpha( column ).
              worksheet-&gt;get_cell(
                EXPORTING
                  ip_column = col_str
                  ip_row    = row
                IMPORTING
                  ep_value = value
              ).
              WRITE: value.
              column = column + 1.
            ENDWHILE.
            WRITE: /.
            column = 1.
            row = row + 1.
          ENDWHILE.
        ENDIF.
        CREATE OBJECT lo_excel_writer TYPE zcl_excel_writer_2007.
        lv_file = lo_excel_writer-&gt;write_file( excel ).

        &quot; Convert to binary
        CALL FUNCTION &apos;SCMS_XSTRING_TO_BINARY&apos;
          EXPORTING
            buffer        = lv_file
          IMPORTING
            output_length = lv_bytecount
          TABLES
            binary_tab    = lt_file_tab.
*    &quot; This method is only available on AS ABAP &gt; 6.40
*    lt_file_tab = cl_bcs_convert=&gt;xstring_to_solix( iv_xstring  = lv_file ).
*    lv_bytecount = xstrlen( lv_file ).

        &quot; Save the file
        cl_gui_frontend_services=&gt;gui_download( EXPORTING bin_filesize = lv_bytecount
                                                          filename     = output_file_path
                                                          filetype     = &apos;BIN&apos;
                                                 CHANGING data_tab     = lt_file_tab ).


      CATCH zcx_excel INTO ex.    &quot; Exceptions for ABAP2XLSX
        msg = ex-&gt;get_text( ).
        WRITE: / msg.
    ENDTRY.
  ENDLOOP.</source>
</PROG>
