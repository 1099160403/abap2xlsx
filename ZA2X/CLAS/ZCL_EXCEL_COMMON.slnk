<?xml version="1.0" encoding="iso-8859-1"?>
<CLAS CLSNAME="ZCL_EXCEL_COMMON" VERSION="1" LANGU="D" DESCRIPT="Static common methods" UUID="5E42354C6579E82CE1000000C0A8FA19" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="FEMIA" CREATEDON="20100710" CHANGEDBY="JWRBA" CHANGEDON="20101123" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <publicSection>class ZCL_EXCEL_COMMON definition
  public
  final
  create public .

*&quot;* public components of class ZCL_EXCEL_COMMON
*&quot;* do not include other source files here!!!
public section.

  class-data C_EXCEL_NUMFMT_OFFSET type INT1 value 164. &quot;#EC NOTEXT .
  class-data C_SPRAS_EN type SPRAS value &apos;E&apos;. &quot;#EC NOTEXT .
  class-data O_CONV type ref to CL_ABAP_CONV_OUT_CE .

  class-methods GET_FIELDCATALOG
    importing
      !IP_TABLE type STANDARD TABLE
    returning
      value(EP_FIELDCATALOG) type ZEXCEL_T_FIELDCATALOG .
  class-methods CONVERT_COLUMN2ALPHA
    importing
      !IP_COLUMN type ZEXCEL_CELL_COLUMN
    returning
      value(EP_COLUMN) type ZEXCEL_CELL_COLUMN_ALPHA .
  class-methods CONVERT_COLUMN2INT
    importing
      !IP_COLUMN type ZEXCEL_CELL_COLUMN_ALPHA
    returning
      value(EP_COLUMN) type ZEXCEL_CELL_COLUMN .
  class-methods NUMBER_TO_EXCEL_STRING
    importing
      value(IP_VALUE) type NUMERIC
    returning
      value(EP_VALUE) type ZEXCEL_CELL_VALUE .
  class-methods DATE_TO_EXCEL_STRING
    importing
      !IP_VALUE type D
    returning
      value(EP_VALUE) type ZEXCEL_CELL_VALUE .
  class-methods TIME_TO_EXCEL_STRING
    importing
      !IP_VALUE type T
    returning
      value(EP_VALUE) type ZEXCEL_CELL_VALUE .
  class-methods ENCRYPT_PASSWORD
    importing
      !I_PWD type ZEXCEL_AES_PASSWORD
    returning
      value(R_ENCRYPTED_PWD) type ZEXCEL_AES_PASSWORD .</publicSection>
 <protectedSection>*&quot;* protected components of class ZCL_EXCEL_COMMON
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
 <privateSection>*&quot;* private components of class ZCL_EXCEL_COMMON
*&quot;* do not include other source files here!!!
private section.

  class-data C_EXCEL_COL_MODULE type INT2 value 64. &quot;#EC NOTEXT .

  class-methods CHAR2HEX
    importing
      !I_CHAR type CHAR1
    returning
      value(R_HEX) type ZEXCEL_PWD_HASH .
  class-methods SHL01
    importing
      !I_PWD_HASH type ZEXCEL_PWD_HASH
    returning
      value(R_PWD_HASH) type ZEXCEL_PWD_HASH .
  class-methods SHR14
    importing
      !I_PWD_HASH type ZEXCEL_PWD_HASH
    returning
      value(R_PWD_HASH) type ZEXCEL_PWD_HASH .</privateSection>
 <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
 <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <attribute CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="C_EXCEL_COL_MODULE" VERSION="1" LANGU="D" DESCRIPT="2 byte integer (signed)" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="FEMIA" CREATEDON="20100710" CHANGEDBY="JWRBA" CHANGEDON="20101123" ATTDECLTYP="1" ATTVALUE="64" ATTEXPVIRT="0" TYPTYPE="1" TYPE="INT2" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="C_EXCEL_NUMFMT_OFFSET" VERSION="1" LANGU="D" DESCRIPT="2 byte integer (signed)" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="FEMIA" CREATEDON="20100812" CHANGEDBY="JWRBA" CHANGEDON="20101123" ATTDECLTYP="1" ATTVALUE="164" ATTEXPVIRT="0" TYPTYPE="1" TYPE="INT1" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="C_SPRAS_EN" VERSION="1" LANGU="D" DESCRIPT="Language Key" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" ATTDECLTYP="1" ATTVALUE="&apos;E&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SPRAS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="O_CONV" VERSION="1" LANGU="D" DESCRIPT="Code Page and Endian Conversion (System Format -&gt; External)" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_ABAP_CONV_OUT_CE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
 <method CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="CHAR2HEX" VERSION="1" LANGU="D" DESCRIPT="Character to Hexadecimal" EXPOSURE="0" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="CHAR2HEX" SCONAME="I_CHAR" VERSION="1" LANGU="D" DESCRIPT="Single-Character Indicator" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CHAR1"/>
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="CHAR2HEX" SCONAME="R_HEX" VERSION="1" LANGU="D" DESCRIPT="Password hash" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_PWD_HASH"/>
  <source>method CHAR2HEX.

  IF o_conv IS NOT BOUND.
    o_conv = cl_abap_conv_out_ce=&gt;create( endian   = &apos;L&apos;
                                          ignore_cerr = &apos;X&apos;
                                          replacement = &apos;#&apos; ).
  ENDIF.

  CALL METHOD o_conv-&gt;reset( ).
  CALL METHOD o_conv-&gt;write( data = i_char ).
  r_hex+1 = o_conv-&gt;get_buffer( ). &quot; x&apos;65&apos; must be x&apos;0065&apos;

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="CONVERT_COLUMN2ALPHA" VERSION="1" LANGU="D" DESCRIPT="Convert column indicator to Alpha" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100710" CHANGEDBY="JWRBA" CHANGEDON="20101123" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="CONVERT_COLUMN2ALPHA" SCONAME="IP_COLUMN" VERSION="1" LANGU="D" DESCRIPT="Cell Column" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100710" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_CELL_COLUMN"/>
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="CONVERT_COLUMN2ALPHA" SCONAME="EP_COLUMN" VERSION="1" LANGU="D" DESCRIPT="Cell Column" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100710" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_CELL_COLUMN_ALPHA"/>
  <source>method CONVERT_COLUMN2ALPHA.

  DATA: lo_conv      TYPE REF TO cl_abap_conv_in_ce,
        lv_uccpi     TYPE i,
        lv_text      TYPE sychar02,
        lv_module    TYPE int4,
        lv_column    TYPE zexcel_cell_column.

  lv_column = ip_column.
  WHILE lv_column GT 0.
    lv_module = ( lv_column - 1 ) MOD 26.
    lv_uccpi  = 65 + lv_module.

    lv_column = ( lv_column - lv_module ) / 26.

    lv_text   = cl_abap_conv_in_ce=&gt;uccpi( lv_uccpi ).
    CONCATENATE lv_text ep_column INTO ep_column.
  ENDWHILE.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="CONVERT_COLUMN2INT" VERSION="1" LANGU="D" DESCRIPT="Convert column indicator to Integer" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100710" CHANGEDBY="JWRBA" CHANGEDON="20101123" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="CONVERT_COLUMN2INT" SCONAME="IP_COLUMN" VERSION="1" LANGU="D" DESCRIPT="Cell Column" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100710" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_CELL_COLUMN_ALPHA"/>
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="CONVERT_COLUMN2INT" SCONAME="EP_COLUMN" VERSION="1" LANGU="D" DESCRIPT="Cell Column" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100710" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_CELL_COLUMN"/>
  <source>method CONVERT_COLUMN2INT.

  DATA: lv_uccpi     TYPE i,
        lv_char      TYPE c,
        lv_column(2) TYPE c.

* Calculate most significant letter
  lv_char    = ip_column+1(1).
  IF lv_char IS NOT INITIAL. &quot;To avoid the first 26 column that have only a char in first position
    ep_column  = cl_abap_conv_out_ce=&gt;uccpi( lv_char ).

    ep_column  = ep_column MOD ( zcl_excel_common=&gt;c_excel_col_module ).

    lv_char    = ip_column(1).
    lv_uccpi   = cl_abap_conv_out_ce=&gt;uccpi( lv_char ).

    lv_uccpi   = ( lv_uccpi MOD ( zcl_excel_common=&gt;c_excel_col_module ) ) * 26.

    ep_column  = ep_column + lv_uccpi.
  ELSE.
    lv_char    = ip_column(1).
    ep_column  = cl_abap_conv_out_ce=&gt;uccpi( lv_char ).
    ep_column  = ep_column - zcl_excel_common=&gt;c_excel_col_module.
  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="DATE_TO_EXCEL_STRING" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100828" CHANGEDBY="JWRBA" CHANGEDON="20101123" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="DATE_TO_EXCEL_STRING" SCONAME="IP_VALUE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100828" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="D"/>
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="DATE_TO_EXCEL_STRING" SCONAME="EP_VALUE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100828" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_CELL_VALUE"/>
  <source>method DATE_TO_EXCEL_STRING.
  DATA: lv_date_diff TYPE i,
        lc_date_baseline TYPE d VALUE &apos;19000101&apos;.

  lv_date_diff = ip_value - lc_date_baseline + 2.
  ep_value = zcl_excel_common=&gt;number_to_excel_string( ip_value = lv_date_diff ).
endmethod.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="ENCRYPT_PASSWORD" VERSION="1" LANGU="D" DESCRIPT="Encrypt password" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="ENCRYPT_PASSWORD" SCONAME="I_PWD" VERSION="1" LANGU="D" DESCRIPT="AES Password" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_AES_PASSWORD"/>
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="ENCRYPT_PASSWORD" SCONAME="R_ENCRYPTED_PWD" VERSION="1" LANGU="D" DESCRIPT="AES Password" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_AES_PASSWORD"/>
  <source>METHOD encrypt_password.

  DATA lv_curr_offset               TYPE i.
  DATA lv_curr_char                 TYPE c LENGTH 1.
  DATA lv_curr_hex                  TYPE zexcel_pwd_hash.
  DATA lv_pwd_len                   TYPE zexcel_pwd_hash.
  DATA lv_pwd_hash                  TYPE zexcel_pwd_hash.

  CONSTANTS:
    lv_0x7fff                    TYPE zexcel_pwd_hash VALUE &apos;7FFF&apos;,
    lv_0x0001                    TYPE zexcel_pwd_hash VALUE &apos;0001&apos;,
    lv_0xce4b                    TYPE zexcel_pwd_hash VALUE &apos;CE4B&apos;.

  DATA lv_pwd            TYPE zexcel_aes_password.

  lv_pwd = i_pwd(15).

  lv_pwd_len = STRLEN( lv_pwd ).
  lv_curr_offset = lv_pwd_len - 1.

  WHILE lv_curr_offset GE 0.

    lv_curr_char = lv_pwd+lv_curr_offset(1).
    lv_curr_hex = char2hex( lv_curr_char ).

    lv_pwd_hash = (  shr14( lv_pwd_hash ) BIT-AND lv_0x0001 ) BIT-OR ( shl01( lv_pwd_hash ) BIT-AND lv_0x7fff ).

    lv_pwd_hash = lv_pwd_hash BIT-XOR lv_curr_hex.
    SUBTRACT 1 FROM lv_curr_offset.
  ENDWHILE.

  lv_pwd_hash = (  shr14( lv_pwd_hash ) BIT-AND lv_0x0001 ) BIT-OR ( shl01( lv_pwd_hash ) BIT-AND lv_0x7fff ).
  lv_pwd_hash = lv_pwd_hash BIT-XOR lv_0xce4b.
  lv_pwd_hash = lv_pwd_hash BIT-XOR lv_pwd_len.

  WRITE lv_pwd_hash TO r_encrypted_pwd.

ENDMETHOD.                    &quot;encrypt_password</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="GET_FIELDCATALOG" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100809" CHANGEDBY="JWRBA" CHANGEDON="20101123" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="GET_FIELDCATALOG" SCONAME="IP_TABLE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100809" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE"/>
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="GET_FIELDCATALOG" SCONAME="EP_FIELDCATALOG" VERSION="1" LANGU="D" DESCRIPT="Table binding field catalog" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100809" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_T_FIELDCATALOG"/>
  <source>method GET_FIELDCATALOG.

  DATA: lr_data             TYPE REF TO data,
        lo_tabdescr         TYPE REF TO cl_abap_structdescr,
        ls_header           TYPE x030l,
        lt_dfies            TYPE ddfields,
        ls_dfies            TYPE dfies,
        ls_fieldcatalog    TYPE zexcel_s_fieldcatalog.

  CREATE DATA lr_data LIKE LINE OF ip_table.

  lo_tabdescr ?= cl_abap_structdescr=&gt;describe_by_data_ref( lr_data ).

  ls_header = lo_tabdescr-&gt;get_ddic_header( ).

  lt_dfies = lo_tabdescr-&gt;get_ddic_field_list( ).

  LOOP AT lt_dfies INTO ls_dfies.
    MOVE-CORRESPONDING ls_dfies TO ls_fieldcatalog.
    APPEND ls_fieldcatalog TO ep_fieldcatalog.
  ENDLOOP.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="NUMBER_TO_EXCEL_STRING" VERSION="1" LANGU="D" DESCRIPT="Converts number to string representation in Excel format" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100828" CHANGEDBY="JWRBA" CHANGEDON="20101123" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="NUMBER_TO_EXCEL_STRING" SCONAME="IP_VALUE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100828" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="NUMERIC"/>
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="NUMBER_TO_EXCEL_STRING" SCONAME="EP_VALUE" VERSION="1" LANGU="D" DESCRIPT="Cell Value" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100828" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_CELL_VALUE"/>
  <source>method NUMBER_TO_EXCEL_STRING.
  DATA: lv_value_c TYPE c LENGTH 100.

  WRITE ip_value TO lv_value_c EXPONENT 0 NO-GROUPING NO-SIGN.
  REPLACE ALL OCCURRENCES OF &apos;,&apos; IN lv_value_c WITH &apos;.&apos;.

  ep_value = lv_value_c.
  CONDENSE ep_value.

  IF ip_value &lt; 0.
    CONCATENATE &apos;-&apos; ep_value INTO ep_value.
  ENDIF.
endmethod.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="SHL01" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="SHL01" SCONAME="I_PWD_HASH" VERSION="1" LANGU="D" DESCRIPT="Password hash" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_PWD_HASH"/>
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="SHL01" SCONAME="R_PWD_HASH" VERSION="1" LANGU="D" DESCRIPT="Password hash" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_PWD_HASH"/>
  <source>method SHL01.

  DATA:
     lv_bit TYPE i,
     lv_curr_pos  TYPE i VALUE 2,
     lv_prev_pos TYPE i VALUE 1.

  DO 15 TIMES.
    GET BIT lv_curr_pos OF i_pwd_hash INTO lv_bit.
    SET BIT lv_prev_pos OF r_pwd_hash TO lv_bit.
    ADD 1 TO lv_curr_pos.
    ADD 1 TO lv_prev_pos.
  ENDDO.
  SET BIT 16 OF r_pwd_hash TO 0.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="SHR14" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="SHR14" SCONAME="I_PWD_HASH" VERSION="1" LANGU="D" DESCRIPT="Password hash" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_PWD_HASH"/>
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="SHR14" SCONAME="R_PWD_HASH" VERSION="1" LANGU="D" DESCRIPT="Password hash" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="JWRBA" CREATEDON="20101122" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_PWD_HASH"/>
  <source>method SHR14.

  DATA:
    lv_bit TYPE i,
    lv_curr_pos TYPE i,
    lv_next_pos TYPE i.

  r_pwd_hash = i_pwd_hash.

  DO 14 TIMES.
    lv_curr_pos = 15.
    lv_next_pos = 16.

    DO 15 TIMES.
      GET BIT lv_curr_pos OF r_pwd_hash INTO lv_bit.
      SET BIT lv_next_pos OF r_pwd_hash TO lv_bit.
      SUBTRACT 1 FROM lv_curr_pos.
      SUBTRACT 1 FROM lv_next_pos.
    ENDDO.
    SET BIT 1 OF r_pwd_hash TO 0.
  ENDDO.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="TIME_TO_EXCEL_STRING" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100828" CHANGEDBY="JWRBA" CHANGEDON="20101123" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="TIME_TO_EXCEL_STRING" SCONAME="IP_VALUE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100828" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="T"/>
  <parameter CLSNAME="ZCL_EXCEL_COMMON" CMPNAME="TIME_TO_EXCEL_STRING" SCONAME="EP_VALUE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20100828" CHANGEDBY="JWRBA" CHANGEDON="20101123" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_CELL_VALUE"/>
  <source>method TIME_TO_EXCEL_STRING.
  DATA: lv_seconds_in_day TYPE i,
        lv_day_fraction TYPE f,
        lc_time_baseline TYPE t VALUE &apos;000000&apos;,
        lc_seconds_in_day TYPE i VALUE 86400.

  lv_seconds_in_day = ip_value - lc_time_baseline.
  lv_day_fraction = lv_seconds_in_day / lc_seconds_in_day.
  ep_value = zcl_excel_common=&gt;number_to_excel_string( ip_value = lv_day_fraction ).
endmethod.</source>
 </method>
</CLAS>
