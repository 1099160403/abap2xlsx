<?xml version="1.0" encoding="utf-8"?>
<CLAS CLSNAME="ZCL_EXCEL_AUTOFILTER" VERSION="1" LANGU="E" DESCRIPT="Autofilter" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
 <types CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="TV_FILTER_RULE" VERSION="1" LANGU="E" DESCRIPT="Filter rule" EXPOSURE="2" STATE="1" EDITORDER="1 " TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <types CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="TV_LOGICAL_OPERATOR" VERSION="1" LANGU="E" DESCRIPT="logical operator to be used in set_xxxxx_pattern" EXPOSURE="2" STATE="1" EDITORDER="2 " TYPTYPE="1" TYPE="CHAR3" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <types CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="TS_FILTER" VERSION="1" LANGU="E" DESCRIPT="Filter" EXPOSURE="2" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="11 " SRCCOLUMN1="4 " SRCROW2="18 " SRCCOLUMN2="21 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ts_filter,
        column            TYPE zexcel_cell_column,
        rule              TYPE tv_filter_rule,
        t_values          TYPE HASHED TABLE OF zexcel_cell_value WITH UNIQUE KEY table_line,
        tr_textfilter1    TYPE range of string,
        logical_operator  TYPE tv_logical_operator,
        tr_textfilter2   TYPE range of string,
      END OF ts_filter
"/>
 <types CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="TT_FILTERS" VERSION="1" LANGU="E" DESCRIPT="All filters" EXPOSURE="2" STATE="1" EDITORDER="4 " TYPTYPE="4" SRCROW1="20 " SRCCOLUMN1="4 " SRCROW2="20 " SRCCOLUMN2="67 " TYPESRC_LENG="0 " TYPESRC="tt_filters TYPE HASHED TABLE OF ts_filter WITH UNIQUE KEY column
"/>
 <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
 <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <typeUsage CLSNAME="ZCL_EXCEL_AUTOFILTER" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
 <forwardDeclaration>ABAP</forwardDeclaration>
 <attribute CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="FILTER_AREA" VERSION="1" LANGU="E" DESCRIPT="Autofilter area ( rows and columns )" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZEXCEL_S_AUTOFILTER_AREA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="MC_FILTER_RULE_SINGLE_VALUES" VERSION="1" LANGU="E" DESCRIPT="Standard filter for single values" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="2" ATTVALUE="&apos;single_values&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TV_FILTER_RULE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="MC_FILTER_RULE_TEXT_PATTERN" VERSION="1" LANGU="E" DESCRIPT="Standard filter for single values" EXPOSURE="2" STATE="1" EDITORDER="3 " ATTDECLTYP="2" ATTVALUE="&apos;text_pattern&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TV_FILTER_RULE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="MC_LOGICAL_OPERATOR_AND" VERSION="1" LANGU="E" DESCRIPT="logical operator to be used in set_xxxxx_pattern" EXPOSURE="2" STATE="1" EDITORDER="4 " ATTDECLTYP="2" ATTVALUE="&apos;and&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TV_LOGICAL_OPERATOR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="MC_LOGICAL_OPERATOR_NONE" VERSION="1" LANGU="E" DESCRIPT="logical operator to be used in set_xxxxx_pattern" EXPOSURE="2" STATE="1" EDITORDER="5 " ATTDECLTYP="2" ATTVALUE="SPACE" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TV_LOGICAL_OPERATOR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="MC_LOGICAL_OPERATOR_OR" VERSION="1" LANGU="E" DESCRIPT="logical operator to be used in set_xxxxx_pattern" EXPOSURE="2" STATE="1" EDITORDER="6 " ATTDECLTYP="2" ATTVALUE="&apos;or&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TV_LOGICAL_OPERATOR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="MT_FILTERS" VERSION="1" LANGU="E" DESCRIPT="All textfilters" EXPOSURE="0" STATE="1" EDITORDER="8 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TT_FILTERS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="WORKSHEET" VERSION="1" LANGU="E" DESCRIPT="Worksheet" EXPOSURE="0" STATE="1" EDITORDER="7 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_EXCEL_WORKSHEET" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="CONSTRUCTOR" SCONAME="IO_SHEET" VERSION="1" LANGU="E" DESCRIPT="Worksheet" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_EXCEL_WORKSHEET"/>
  <source>METHOD constructor.
  worksheet = io_sheet.
ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="GET_COLUMN_FILTER" VERSION="1" LANGU="E" DESCRIPT="Get filter for column" EXPOSURE="1" STATE="1" EDITORDER="11 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="GET_COLUMN_FILTER" SCONAME="I_COLUMN" VERSION="1" LANGU="E" DESCRIPT="Cell Column" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_CELL_COLUMN"/>
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="GET_COLUMN_FILTER" SCONAME="RR_FILTER" VERSION="1" LANGU="E" DESCRIPT="Filter" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="TS_FILTER"/>
  <source>METHOD get_column_filter.

  DATA: ls_filter LIKE LINE OF me-&gt;mt_filters.

  READ TABLE me-&gt;mt_filters REFERENCE INTO rr_filter WITH TABLE KEY column = i_column.
  IF sy-subrc &lt;&gt; 0.
    ls_filter-column = i_column.
    INSERT ls_filter INTO TABLE me-&gt;mt_filters REFERENCE INTO rr_filter.
  ENDIF.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="GET_FILTER_AREA" VERSION="1" LANGU="E" DESCRIPT="Get filter area for filter" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="GET_FILTER_AREA" SCONAME="RS_AREA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_S_AUTOFILTER_AREA"/>
  <source>METHOD get_filter_area.

  validate_area( ).

  rs_area = filter_area.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="GET_FILTER_RANGE" VERSION="1" LANGU="E" DESCRIPT="Get Filter range for filter" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="GET_FILTER_RANGE" SCONAME="R_RANGE" VERSION="1" LANGU="E" DESCRIPT="Cell Value" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_CELL_VALUE"/>
  <source>METHOD get_filter_range.
  DATA: l_row_start_c TYPE string,
        l_row_end_c   TYPE string,
        l_col_start_c TYPE string,
        l_col_end_c   TYPE string,
        l_value       TYPE string.

  validate_area( ).

  l_row_end_c = filter_area-row_end.
  CONDENSE l_row_end_c NO-GAPS.

  l_row_start_c = filter_area-row_start.
  CONDENSE l_row_start_c NO-GAPS.

  l_col_start_c = zcl_excel_common=&gt;convert_column2alpha( ip_column = filter_area-col_start ) .
  l_col_end_c   = zcl_excel_common=&gt;convert_column2alpha( ip_column = filter_area-col_end ) .

  CONCATENATE l_col_start_c l_row_start_c &apos;:&apos; l_col_end_c l_row_end_c INTO r_range.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="GET_FILTER_REFERENCE" VERSION="1" LANGU="E" DESCRIPT="Get filter reference for filter" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="GET_FILTER_REFERENCE" SCONAME="R_REF" VERSION="1" LANGU="E" DESCRIPT="Full reference of a range" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_RANGE_VALUE"/>
  <source>METHOD get_filter_reference.
  DATA: l_row_start_c TYPE string,
        l_row_end_c   TYPE string,
        l_col_start_c TYPE string,
        l_col_end_c   TYPE string,
        l_value       TYPE string.

  validate_area( ).

  l_row_end_c = filter_area-row_end.
  CONDENSE l_row_end_c NO-GAPS.

  l_row_start_c = filter_area-row_start.
  CONDENSE l_row_start_c NO-GAPS.

  l_col_start_c = zcl_excel_common=&gt;convert_column2alpha( ip_column = filter_area-col_start ) .
  l_col_end_c   = zcl_excel_common=&gt;convert_column2alpha( ip_column = filter_area-col_end ) .
  l_value = worksheet-&gt;get_title( ) .

  r_ref = zcl_excel_common=&gt;escape_string( ip_value = l_value ).

  CONCATENATE r_ref &apos;!$&apos; l_col_start_c &apos;$&apos; l_row_start_c &apos;:$&apos; l_col_end_c &apos;$&apos; l_row_end_c INTO r_ref.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="GET_VALUES" VERSION="1" LANGU="E" DESCRIPT="Get filter values table" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="GET_VALUES" SCONAME="RT_FILTER" VERSION="1" LANGU="E" DESCRIPT="Cell Value" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZEXCEL_T_AUTOFILTER_VALUES"/>
  <source>METHOD get_values.

  FIELD-SYMBOLS: &lt;ls_filter&gt; LIKE LINE OF me-&gt;mt_filters,
                 &lt;ls_value&gt;  LIKE LINE OF &lt;ls_filter&gt;-t_values.

  DATA: ls_filter LIKE LINE OF rt_filter.

  LOOP AT me-&gt;mt_filters ASSIGNING &lt;ls_filter&gt; WHERE rule = mc_filter_rule_single_values.

    ls_filter-column = &lt;ls_filter&gt;-column.
    LOOP AT &lt;ls_filter&gt;-t_values ASSIGNING &lt;ls_value&gt;.
      ls_filter-value = &lt;ls_value&gt;.
      APPEND ls_filter TO rt_filter.
    ENDLOOP.

  ENDLOOP.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="IS_ROW_HIDDEN" VERSION="1" LANGU="E" DESCRIPT="Is cellrow hidden by this autofilter" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="IS_ROW_HIDDEN" SCONAME="IV_ROW" VERSION="1" LANGU="E" DESCRIPT="Cell Row" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_CELL_ROW"/>
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="IS_ROW_HIDDEN" SCONAME="RV_IS_HIDDEN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
  <source>METHOD is_row_hidden.


  DATA: lr_filter TYPE REF TO ts_filter,
        lv_col    TYPE i,
        ls_value  TYPE zexcel_s_autofilter_values.

  FIELD-SYMBOLS: &lt;ls_filter&gt; TYPE ts_filter.

  rv_is_hidden = abap_false.

*--------------------------------------------------------------------*
* 1st row of filter area is never hidden, because here the filter
* symbol is being shown
*--------------------------------------------------------------------*
  IF iv_row = me-&gt;filter_area-row_start.
    RETURN.
  ENDIF.


  lv_col = me-&gt;filter_area-col_start.


  WHILE lv_col &lt;= me-&gt;filter_area-col_end.

    lr_filter = me-&gt;get_column_filter( lv_col ).
    ASSIGN lr_filter-&gt;* TO &lt;ls_filter&gt;.

    CASE &lt;ls_filter&gt;-rule.

      WHEN mc_filter_rule_single_values.
        rv_is_hidden = me-&gt;is_row_hidden_single_values( iv_row    = iv_row
                                                        iv_col    = lv_col
                                                        is_filter = &lt;ls_filter&gt; ).

      WHEN mc_filter_rule_text_pattern.
        rv_is_hidden = me-&gt;is_row_hidden_text_pattern(  iv_row    = iv_row
                                                        iv_col    = lv_col
                                                        is_filter = &lt;ls_filter&gt; ).

    ENDCASE.

    IF rv_is_hidden = abap_true.
      RETURN.
    ENDIF.


    ADD 1 TO lv_col.

  ENDWHILE.


ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="IS_ROW_HIDDEN_SINGLE_VALUES" VERSION="1" LANGU="E" DESCRIPT="Is cellrow hidden by this autofilter if rule single values" EXPOSURE="1" STATE="1" EDITORDER="12 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="IS_ROW_HIDDEN_SINGLE_VALUES" SCONAME="IV_ROW" VERSION="1" LANGU="E" DESCRIPT="Cell Row" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_CELL_ROW"/>
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="IS_ROW_HIDDEN_SINGLE_VALUES" SCONAME="IV_COL" VERSION="1" LANGU="E" DESCRIPT="Cell Column" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_CELL_COLUMN"/>
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="IS_ROW_HIDDEN_SINGLE_VALUES" SCONAME="IS_FILTER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_FILTER"/>
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="IS_ROW_HIDDEN_SINGLE_VALUES" SCONAME="RV_IS_HIDDEN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
  <source>METHOD is_row_hidden_single_values.


  DATA: lv_value TYPE string.

  FIELD-SYMBOLS: &lt;ls_sheet_content&gt; LIKE LINE OF me-&gt;worksheet-&gt;sheet_content.

  rv_is_hidden = abap_false.   &quot; Default setting is NOT HIDDEN = is in filter range

*--------------------------------------------------------------------*
* No filter values --&gt; only symbol should be shown but nothing is being hidden
*--------------------------------------------------------------------*
  IF is_filter-t_values IS INITIAL.
    RETURN.
  ENDIF.

*--------------------------------------------------------------------*
* Get value of cell
*--------------------------------------------------------------------*
  READ TABLE me-&gt;worksheet-&gt;sheet_content ASSIGNING &lt;ls_sheet_content&gt; WITH TABLE KEY cell_row    = iv_row
                                                                                      cell_column = iv_col.
  IF sy-subrc = 0.
    lv_value = &lt;ls_sheet_content&gt;-cell_value.
  ELSE.
    CLEAR lv_value.
  ENDIF.

*--------------------------------------------------------------------*
* Check whether it is affected by filter
* this needs to be extended if we support other filtertypes
* other than single values
*--------------------------------------------------------------------*
  READ TABLE is_filter-t_values TRANSPORTING NO FIELDS WITH TABLE KEY table_line =  lv_value.
  IF sy-subrc &lt;&gt; 0.
    rv_is_hidden = abap_true.
    RETURN.
  ENDIF.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="IS_ROW_HIDDEN_TEXT_PATTERN" VERSION="1" LANGU="E" DESCRIPT="Is cellrow hidden by this autofilter if rule text pattern" EXPOSURE="1" STATE="1" EDITORDER="13 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="IS_ROW_HIDDEN_TEXT_PATTERN" SCONAME="IV_ROW" VERSION="1" LANGU="E" DESCRIPT="Cell Row" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_CELL_ROW"/>
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="IS_ROW_HIDDEN_TEXT_PATTERN" SCONAME="IV_COL" VERSION="1" LANGU="E" DESCRIPT="Cell Column" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_CELL_COLUMN"/>
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="IS_ROW_HIDDEN_TEXT_PATTERN" SCONAME="IS_FILTER" VERSION="1" LANGU="E" DESCRIPT="Filter" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_FILTER"/>
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="IS_ROW_HIDDEN_TEXT_PATTERN" SCONAME="RV_IS_HIDDEN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
  <source>METHOD is_row_hidden_text_pattern.



  DATA: lv_value TYPE string.

  FIELD-SYMBOLS: &lt;ls_sheet_content&gt; LIKE LINE OF me-&gt;worksheet-&gt;sheet_content.

  rv_is_hidden = abap_false.   &quot; Default setting is NOT HIDDEN = is in filter range

*--------------------------------------------------------------------*
* Get value of cell
*--------------------------------------------------------------------*
  READ TABLE me-&gt;worksheet-&gt;sheet_content ASSIGNING &lt;ls_sheet_content&gt; WITH TABLE KEY cell_row    = iv_row
                                                                                      cell_column = iv_col.
  IF sy-subrc = 0.
    lv_value = &lt;ls_sheet_content&gt;-cell_value.
  ELSE.
    CLEAR lv_value.
  ENDIF.

*--------------------------------------------------------------------*
* Check whether it is affected by filter
* this needs to be extended if we support other filtertypes
* other than single values
*--------------------------------------------------------------------*
  IF lv_value NOT IN is_filter-tr_textfilter1.
    rv_is_hidden = abap_true.
    RETURN.
  ENDIF.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="SET_FILTER_AREA" VERSION="1" LANGU="E" DESCRIPT="Set filter area for filter" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="SET_FILTER_AREA" SCONAME="IS_AREA" VERSION="1" LANGU="E" DESCRIPT="Autofilter area ( rows and columns )" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_S_AUTOFILTER_AREA"/>
  <source>METHOD set_filter_area.

  filter_area = is_area.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="SET_TEXT_FILTER" VERSION="1" LANGU="E" DESCRIPT="Set filter by text pattern - see method documentation" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="SET_TEXT_FILTER" SCONAME="I_COLUMN" VERSION="1" LANGU="E" DESCRIPT="Cell Column" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_CELL_COLUMN"/>
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="SET_TEXT_FILTER" SCONAME="IV_TEXTFILTER1" VERSION="1" LANGU="E" DESCRIPT="Textfilter 1" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE"/>
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="SET_TEXT_FILTER" SCONAME="IV_LOGICAL_OPERATOR" VERSION="1" LANGU="E" DESCRIPT="logical operator to be used in set_xxxxx_pattern" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TV_LOGICAL_OPERATOR" PARVALUE="MC_LOGICAL_OPERATOR_NONE"/>
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="SET_TEXT_FILTER" SCONAME="IV_TEXTFILTER2" VERSION="1" LANGU="E" DESCRIPT="not implemented yet" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE" PAROPTIONL="X"/>
  <source>METHOD set_text_filter.
*  see method documentation how to use this

  DATA: lr_filter TYPE REF TO ts_filter,
        ls_value1 TYPE LINE OF ts_filter-tr_textfilter1.

  FIELD-SYMBOLS: &lt;ls_filter&gt; TYPE ts_filter.


  lr_filter = me-&gt;get_column_filter(  i_column ).
  ASSIGN lr_filter-&gt;* TO &lt;ls_filter&gt;.

  &lt;ls_filter&gt;-rule     = mc_filter_rule_text_pattern.
  CLEAR &lt;ls_filter&gt;-tr_textfilter1.

  IF iv_textfilter1 CA &apos;*+&apos;. &quot; Pattern
    ls_value1-sign   = &apos;I&apos;.
    ls_value1-option = &apos;CP&apos;.
    ls_value1-low    = iv_textfilter1.
  ELSE.
    ls_value1-sign   = &apos;I&apos;.
    ls_value1-option = &apos;EQ&apos;.
    ls_value1-low    = iv_textfilter1.
  ENDIF.
  APPEND ls_value1 TO &lt;ls_filter&gt;-tr_textfilter1.

ENDMETHOD.</source>
  <methodDocumentation OBJECT="ZCL_EXCEL_AUTOFILTER          SET_TEXT_FILTER">
   <language SPRAS="E">
    <textLine TDFORMAT="U1" TDLINE="&amp;FUNCTIONALITY&amp;"/>
    <textLine TDFORMAT="AS" TDLINE="Work in progress"/>
    <textLine TDFORMAT="AS" TDLINE="Currently only ONE textpattern or text is allowed"/>
    <textLine TDFORMAT="AS" TDLINE="You may use wildcards like in select-options ( * and + )"/>
    <textLine TDFORMAT="AS" TDLINE="Rows are filtered out already, missing is the setting of the filterarea"/>
    <textLine TDFORMAT="U1" TDLINE="&amp;PRECONDITION&amp;"/>
    <textLine TDFORMAT="AS"/>
    <textLine TDFORMAT="U1" TDLINE="&amp;RESULT&amp;"/>
    <textLine TDFORMAT="AS"/>
    <textLine TDFORMAT="U1" TDLINE="&amp;PARAMETERS&amp;"/>
    <textLine TDFORMAT="AS"/>
    <textLine TDFORMAT="U1" TDLINE="&amp;EXCEPTIONS&amp;"/>
    <textLine TDFORMAT="AS"/>
    <textLine TDFORMAT="U1" TDLINE="&amp;HINTS&amp;"/>
    <textLine TDFORMAT="AS"/>
   </language>
  </methodDocumentation>
 </method>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="SET_VALUE" VERSION="1" LANGU="E" DESCRIPT="Set Filter value" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="SET_VALUE" SCONAME="I_COLUMN" VERSION="1" LANGU="E" DESCRIPT="Cell Column" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_CELL_COLUMN"/>
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="SET_VALUE" SCONAME="I_VALUE" VERSION="1" LANGU="E" DESCRIPT="Cell Column" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_CELL_VALUE"/>
  <source>METHOD set_value.

  DATA: lr_filter TYPE REF TO ts_filter,
        ls_value  TYPE zexcel_s_autofilter_values.

  FIELD-SYMBOLS: &lt;ls_filter&gt; TYPE ts_filter.


  lr_filter = me-&gt;get_column_filter(  i_column ).
  ASSIGN lr_filter-&gt;* TO &lt;ls_filter&gt;.

  &lt;ls_filter&gt;-rule     = mc_filter_rule_single_values.

  INSERT i_value INTO TABLE &lt;ls_filter&gt;-t_values.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="SET_VALUES" VERSION="1" LANGU="E" DESCRIPT="Set Filter values with table" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="SET_VALUES" SCONAME="IT_VALUES" VERSION="1" LANGU="E" DESCRIPT="Table with autofilter values" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZEXCEL_T_AUTOFILTER_VALUES"/>
  <source>METHOD set_values.

  FIELD-SYMBOLS: &lt;ls_value&gt; LIKE LINE OF it_values.

  LOOP AT it_values ASSIGNING &lt;ls_value&gt;.

    me-&gt;set_value( i_column = &lt;ls_value&gt;-column
                   i_value  = &lt;ls_value&gt;-value ).

  ENDLOOP.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_EXCEL_AUTOFILTER" CMPNAME="VALIDATE_AREA" VERSION="1" LANGU="E" DESCRIPT="Validates filter area" EXPOSURE="0" STATE="1" EDITORDER="14 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <source>METHOD validate_area.
  DATA: l_col TYPE zexcel_cell_column,
        l_row TYPE zexcel_cell_row.

  l_row = worksheet-&gt;get_highest_row( ) .
  l_col = worksheet-&gt;get_highest_column( ) .

  IF filter_area IS INITIAL.
    filter_area-row_start = 1.
    filter_area-col_start = 1.
    filter_area-row_end   = l_row .
    filter_area-col_end   = l_col .
  ENDIF.

  IF filter_area-row_start &lt; 1.
    filter_area-row_start = 1.
  ENDIF.
  IF filter_area-col_start &lt; 1.
    filter_area-col_start = 1.
  ENDIF.
  IF filter_area-row_end &gt; l_row OR
     filter_area-row_end &lt; 1.
    filter_area-row_end = l_row.
  ENDIF.
  IF filter_area-col_end &gt; l_col OR
     filter_area-col_end &lt; 1.
    filter_area-col_end = l_col.
  ENDIF.
  IF filter_area-row_start &gt;= filter_area-row_end.
    filter_area-row_start = filter_area-row_end - 1.
    IF filter_area-row_start &lt; 1.
      filter_area-row_start = 1.
      filter_area-row_end = 2.
    ENDIF.
  ENDIF.
  IF filter_area-col_start &gt; filter_area-col_end.
    filter_area-col_start = filter_area-col_end.
  ENDIF.
ENDMETHOD.</source>
 </method>
</CLAS>
